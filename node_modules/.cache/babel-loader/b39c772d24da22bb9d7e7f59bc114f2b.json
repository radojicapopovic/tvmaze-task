{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nconst useFetchTVMazeShowCast = showId => {\n  _s();\n  const [data, setData] = useState();\n  const [isLoading, setIsLoading] = useState(false);\n  const [isError, setIsError] = useState(false);\n  useEffect(() => {\n    const fetchData = async () => {\n      setIsError(false);\n      setIsLoading(true);\n      const {\n        CancelToken\n      } = axios;\n      const source = CancelToken.source();\n      try {\n        const response = await axios.get(`http://api.tvmaze.com/shows/${showId}/cast`, {\n          cancelToken: source.token\n        });\n        setData(response.data);\n      } catch (error) {\n        setIsError(true);\n      }\n      setIsLoading(false);\n    };\n    fetchData();\n  }, [showId]);\n  return {\n    data,\n    isLoading,\n    isError\n  };\n};\n_s(useFetchTVMazeShowCast, \"r44TArangLKbjY/eCrAWtM5c6cg=\");\nexport default useFetchTVMazeShowCast;","map":{"version":3,"names":["useState","useEffect","axios","useFetchTVMazeShowCast","showId","data","setData","isLoading","setIsLoading","isError","setIsError","fetchData","CancelToken","source","response","get","cancelToken","token","error"],"sources":["/Users/radojicapopovic/Desktop/task/src/hooks/useFetchTVMazeShowCast.ts"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport ShowCast from \"../interfaces/ShowCast\";\n\nexport interface IUseFetchTVMazeShowApi {\n  data?: ShowCast[];\n  isLoading: boolean;\n  isError: boolean;\n}\n\nconst useFetchTVMazeShowCast = (showId: number): IUseFetchTVMazeShowApi => {\n  const [data, setData] = useState<ShowCast[]>();\n  const [isLoading, setIsLoading] = useState(false);\n  const [isError, setIsError] = useState(false);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      setIsError(false);\n      setIsLoading(true);\n\n      const { CancelToken } = axios;\n      const source = CancelToken.source();\n\n      try {\n        const response = await axios.get<ShowCast[]>(\n          `http://api.tvmaze.com/shows/${showId}/cast`,\n          { cancelToken: source.token }\n        );\n\n        setData(response.data);\n      } catch (error) {\n        setIsError(true);\n      }\n\n      setIsLoading(false);\n    };\n\n    fetchData();\n  }, [showId]);\n\n  return { data, isLoading, isError };\n};\n\nexport default useFetchTVMazeShowCast;\n"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,KAAK,MAAM,OAAO;AASzB,MAAMC,sBAAsB,GAAIC,MAAc,IAA6B;EAAA;EACzE,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGN,QAAQ,EAAc;EAC9C,MAAM,CAACO,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EAE7CC,SAAS,CAAC,MAAM;IACd,MAAMU,SAAS,GAAG,YAAY;MAC5BD,UAAU,CAAC,KAAK,CAAC;MACjBF,YAAY,CAAC,IAAI,CAAC;MAElB,MAAM;QAAEI;MAAY,CAAC,GAAGV,KAAK;MAC7B,MAAMW,MAAM,GAAGD,WAAW,CAACC,MAAM,EAAE;MAEnC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMZ,KAAK,CAACa,GAAG,CAC7B,+BAA8BX,MAAO,OAAM,EAC5C;UAAEY,WAAW,EAAEH,MAAM,CAACI;QAAM,CAAC,CAC9B;QAEDX,OAAO,CAACQ,QAAQ,CAACT,IAAI,CAAC;MACxB,CAAC,CAAC,OAAOa,KAAK,EAAE;QACdR,UAAU,CAAC,IAAI,CAAC;MAClB;MAEAF,YAAY,CAAC,KAAK,CAAC;IACrB,CAAC;IAEDG,SAAS,EAAE;EACb,CAAC,EAAE,CAACP,MAAM,CAAC,CAAC;EAEZ,OAAO;IAAEC,IAAI;IAAEE,SAAS;IAAEE;EAAQ,CAAC;AACrC,CAAC;AAAC,GA/BIN,sBAAsB;AAiC5B,eAAeA,sBAAsB"},"metadata":{},"sourceType":"module"}