{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nconst useFetchTVMazeShowsApi = () => {\n  _s();\n  const [data, setData] = useState();\n  const [isLoading, setIsLoading] = useState(false);\n  const [isError, setIsError] = useState(false);\n  useEffect(() => {\n    const fetchData = async () => {\n      setIsError(false);\n      setIsLoading(true);\n      const {\n        CancelToken\n      } = axios;\n      const source = CancelToken.source();\n      try {\n        const response = await axios.get(`http://api.tvmaze.com/schedule`, {\n          cancelToken: source.token\n        });\n        setData(response.data);\n      } catch (error) {\n        setIsError(true);\n      }\n      setIsLoading(false);\n    };\n    fetchData();\n  }, []);\n  return {\n    data,\n    isLoading,\n    isError\n  };\n};\n_s(useFetchTVMazeShowsApi, \"r44TArangLKbjY/eCrAWtM5c6cg=\");\nexport default useFetchTVMazeShowsApi;","map":{"version":3,"names":["useState","useEffect","axios","useFetchTVMazeShowsApi","data","setData","isLoading","setIsLoading","isError","setIsError","fetchData","CancelToken","source","response","get","cancelToken","token","error"],"sources":["/Users/radojicapopovic/Desktop/task/src/hooks/useFetchTVMazeShowsApi.ts"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { ShowEpisode } from \"../interfaces/ShowEpisode\";\n\nexport interface IUseFetchTVMazeShowsApi {\n  data?: ShowEpisode[];\n  isLoading: boolean;\n  isError: boolean;\n}\n\nconst useFetchTVMazeShowsApi = (): IUseFetchTVMazeShowsApi => {\n  const [data, setData] = useState<ShowEpisode[]>();\n  const [isLoading, setIsLoading] = useState(false);\n  const [isError, setIsError] = useState(false);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      setIsError(false);\n      setIsLoading(true);\n\n      const { CancelToken } = axios;\n      const source = CancelToken.source();\n\n      try {\n        const response = await axios.get<ShowEpisode[]>(\n          `http://api.tvmaze.com/schedule`,\n          { cancelToken: source.token }\n        );\n\n        setData(response.data);\n      } catch (error) {\n        setIsError(true);\n      }\n\n      setIsLoading(false);\n    };\n\n    fetchData();\n  }, []);\n\n  return { data, isLoading, isError };\n};\n\nexport default useFetchTVMazeShowsApi;\n"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,KAAK,MAAM,OAAO;AASzB,MAAMC,sBAAsB,GAAG,MAA+B;EAAA;EAC5D,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGL,QAAQ,EAAiB;EACjD,MAAM,CAACM,SAAS,EAAEC,YAAY,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EAE7CC,SAAS,CAAC,MAAM;IACd,MAAMS,SAAS,GAAG,YAAY;MAC5BD,UAAU,CAAC,KAAK,CAAC;MACjBF,YAAY,CAAC,IAAI,CAAC;MAElB,MAAM;QAAEI;MAAY,CAAC,GAAGT,KAAK;MAC7B,MAAMU,MAAM,GAAGD,WAAW,CAACC,MAAM,EAAE;MAEnC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMX,KAAK,CAACY,GAAG,CAC7B,gCAA+B,EAChC;UAAEC,WAAW,EAAEH,MAAM,CAACI;QAAM,CAAC,CAC9B;QAEDX,OAAO,CAACQ,QAAQ,CAACT,IAAI,CAAC;MACxB,CAAC,CAAC,OAAOa,KAAK,EAAE;QACdR,UAAU,CAAC,IAAI,CAAC;MAClB;MAEAF,YAAY,CAAC,KAAK,CAAC;IACrB,CAAC;IAEDG,SAAS,EAAE;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,OAAO;IAAEN,IAAI;IAAEE,SAAS;IAAEE;EAAQ,CAAC;AACrC,CAAC;AAAC,GA/BIL,sBAAsB;AAiC5B,eAAeA,sBAAsB"},"metadata":{},"sourceType":"module"}